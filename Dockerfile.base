# Build with `docker build - <Dockerfile.base`, i.e., no build context

ARG DOCKER_REGISTRY=gitlab.mp.kududyn.io:5005
ARG BINARYNINJA_IMAGE_TAG=latest

# From blaze-system/deps/binja
FROM ${DOCKER_REGISTRY}/blaze/blaze-system/binary-ninja:${BINARYNINJA_IMAGE_TAG} as binaryninja
RUN apt update && apt install -yq \
    autoconf \
    automake \
    build-essential \
    netbase \
    wget \
    unzip \
    libtinfo-dev \
    haskell-stack \
    git \
    locales \
    z3

# Update Binary Ninja
ARG BLAZE_BINJA_CHANNEL=dev
ARG BLAZE_BINJA_VERSION=2.1.2282-dev
ARG BLAZE_BINJA_API_COMMIT=cf7851dee087e939ae10c0befe7ffa854885d41c
ENV BLAZE_BINJA_CHANNEL=${BLAZE_BINJA_CHANNEL}
ENV BLAZE_BINJA_VERSION=${BLAZE_BINJA_VERSION}
RUN python /tmp/binjaupdater.py
RUN cd "${BN_TARGET_ROOT}/bn-api" && git checkout "${BLAZE_BINJA_API_COMMIT}"

ENV BLAZE_BINJA_API=${BN_TARGET_ROOT}/bn-api

# Generate and set en_US.UTF-8 locale
RUN locale-gen en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

RUN stack upgrade --binary-only

ENV PATH="/root/.local/bin${PATH:+:$PATH}"

COPY blaze/ /tmp/blaze-deps/blaze/
#RUN find /tmp/blaze-deps/blaze \( -name .git -o -name .stack-work -o -name .stack-work.deps \) -prune -o -print0 | xargs -0 -n1 -I{} bash -c 'echo -en {}\\t; tar --mtime 0 --sort=name --owner=0 --group=0 --numeric-owner --pax-option=exthdr.name=%d/PaxHeaders/%f,delete=atime,delete=ctime -c {} | sha256sum'
COPY haskell-binja/ /tmp/blaze-deps/haskell-binja/
RUN git -C /tmp/blaze-deps/haskell-binja/ ls-files --others
COPY binary-analysis/ /tmp/blaze-deps/binary-analysis/
RUN git -C /tmp/blaze-deps/binary-analysis/ ls-files --others
COPY binja-header-cleaner/ /tmp/blaze-deps/binja-header-cleaner/
RUN git -C /tmp/blaze-deps/binja-header-cleaner/ ls-files --others
RUN apt install -qy tree && tree -a /tmp/blaze-deps
RUN z3 --version
RUN cd /tmp/blaze-deps/blaze && \
    stack build --only-dependencies --test --no-run-tests && \
    cd / && \
    rm -rf /tmp/blaze-deps
