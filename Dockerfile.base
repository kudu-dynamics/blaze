# Build with `docker build - <Dockerfile.base`, i.e., no build context

ARG DOCKER_REGISTRY=gitlab.mp.kududyn.io:5005
ARG BINARYNINJA_IMAGE_TAG=latest

# From blaze-system/deps/binja
FROM ${DOCKER_REGISTRY}/blaze/blaze-system/binary-ninja:${BINARYNINJA_IMAGE_TAG} as binaryninja
RUN apt update && apt install -yq \
    autoconf \
    automake \
    build-essential \
    netbase \
    wget \
    unzip \
    libtinfo-dev \
    haskell-stack \
    git \
    locales \
    ninja-build

RUN lscpu && ninja --help && false

# Update Binary Ninja
ARG BLAZE_BINJA_CHANNEL=dev
ARG BLAZE_BINJA_VERSION=LATEST
ARG BLAZE_BINJA_API_COMMIT=origin/dev
RUN /tmp/binja_api_update "${BINJA_API}" "${BLAZE_BINJA_API_COMMIT}"
RUN python3 /tmp/binjaupdater.py "${BLAZE_BINJA_CHANNEL}" "${BLAZE_BINJA_VERSION}"

# Generate and set en_US.UTF-8 locale
RUN locale-gen en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

RUN stack upgrade --binary-only

ENV PATH="/root/.local/bin${PATH:+:$PATH}"

COPY blaze/ /tmp/blaze-deps/blaze/
COPY haskell-binja/ /tmp/blaze-deps/haskell-binja/
COPY binary-analysis/ /tmp/blaze-deps/binary-analysis/
COPY binja-header-cleaner/ /tmp/blaze-deps/binja-header-cleaner/
RUN cd /tmp/blaze-deps/blaze && \
    stack build --only-dependencies --test --no-run-tests && \
    cd / && \
    rm -rf /tmp/blaze-deps
