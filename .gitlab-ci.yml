stages:
  - build
  - test
  - docs
  - deploy

variables:
  CACHE_FALLBACK_KEY: ${CI_DEFAULT_BRANCH}

cache:
  key: ${CI_COMMIT_REF_SLUG}

.haskell-job: &haskell-job
  image: ${CI_REGISTRY}/blaze/blaze-system/haskell-binaryninja-base
  tags:
    - dind
  variables:
    STACK_ROOT: ${CI_PROJECT_DIR}/.stack
  cache:
    paths:
      - .stack/
      - .stack-work/


before_script:
  - echo -e "machine ${CI_SERVER_HOST}\nlogin gitlab-ci-token\npassword ${CI_JOB_TOKEN}" > ~/.netrc
  - apt update && apt install -y git
  - |
    for project in binary-analysis haskell-binja binja-header-cleaner; do
      rm -rf "../$project"
      git clone --depth=1 ${CI_REPOSITORY_URL%/*}/"$project" "../$project"
    done

build:
  <<: *haskell-job
  stage: build
  #needs: []  # gitlab 12.8
  script: |
    stack build
  artifacts:
    paths:
      - .stack/
      - .stack-work/

docs:
  <<: *haskell-job
  stage: docs
  needs:
    - job: build
      artifacts: true
  script: |
    stack haddock
  artifacts:
    paths:
      - .stack/
      - .stack-work/

pages:
  <<: *haskell-job
  stage: deploy
  needs:
    - job: docs
      artifacts: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "haddock" || $CI_PIPELINE_SOURCE == "trigger"'
  script: |
    cp -arT "`stack path --snapshot-doc-root`" public
  artifacts:
    paths:
      - public
