stages:
  - deps
  - build
  - test
  - docs
  - deploy

.haskell-job: &haskell-job
  #image: ${CI_REGISTRY}/blaze/blaze/blaze-deps:${CI_COMMIT_REF_SLUG}
  image: ${CI_REGISTRY}/blaze/blaze-system/haskell-binaryninja-base:ci
  tags:
    - dind
  variables:
    STACK_ROOT: ${CI_PROJECT_DIR}/.stack

before_script:
  - echo -e "machine ${CI_SERVER_HOST}\nlogin gitlab-ci-token\npassword ${CI_JOB_TOKEN}" > ~/.netrc
  - |
    for project in binary-analysis haskell-binja binja-header-cleaner; do
      rm -rf "../$project"
      git clone --depth=1 ${CI_REPOSITORY_URL%/*}/"$project" "../$project"
    done

build:
  <<: *haskell-job
  stage: build
  #needs: ["deps"]
  script:
    - stack build
  variables:
    CACHE_FALLBACK_KEY: ${CI_DEFAULT_BRANCH}-${CI_JOB_NAME}
  cache:
    key: ${CI_COMMIT_REF_SLUG}-${CI_JOB_NAME}
    paths:
      - .stack/
      - .stack-work/

pages:
  <<: *haskell-job
  stage: deploy
  needs: ["build"]
  rules:
    - if: '$CI_COMMIT_BRANCH == "haddock" || $CI_PIPELINE_SOURCE == "trigger"'
  script:
    - ls -al
    - locale
    - stack haddock
    - cp -arT "$(stack path --snapshot-doc-root)" public
  artifacts:
    paths:
      - public
