stages:
  - base
  - push-base
  - build
  - test
  - docs
  - deploy

.job:
  before_script:
    - echo -e "section_start:`date +%s`:pre-env\r\e[0KEnvironment info (before_script)"
    - env
    - ls -al /usr/lib ~/.binaryninja /usr/share/binaryninja/* || true
    - ls -al
    - ( shopt -s dotglob && du -bhs * )
    - echo -e "section_end:`date +%s`:pre-env\r\e[0K"
    - echo -e "section_start:`date +%s`:setup\r\e[0KSetup"
    - echo -e "machine ${CI_SERVER_HOST}\nlogin gitlab-ci-token\npassword ${CI_JOB_TOKEN}" > ~/.netrc
    - mkdir -p .stack-work.deps
    - |
      for project in binary-analysis haskell-binja binja-header-cleaner; do
        rm -rf "../$project"
        git clone --depth=1 ${CI_REPOSITORY_URL%/*}/"$project" "../$project"
        pushd "../$project" >/dev/null
        mkdir -p ../blaze/.stack-work.deps/"$project"
        ln -sf ../blaze/.stack-work.deps/"$project" .stack-work
        ls -al "../$project"
        popd
      done
    - echo -e "section_end:`date +%s`:setup\r\e[0K"
  after_script:
    - echo -e "section_start:`date +%s`:post-env\r\e[0KEnvironment info (after_script)"
    - ls -al
    - ( shopt -s dotglob && du -bhs * )
    - echo -e "section_end:`date +%s`:post-env\r\e[0K"

.haskell-job:
  extends: .job
  #image: ${CI_REGISTRY}/blaze/blaze-system/haskell-binaryninja-base:ci
  image: ${CI_REGISTRY}/blaze/blaze/blaze-base:latest
  tags:
    - dind
  variables:
    STACK_ROOT: ${CI_PROJECT_DIR}/.stack
    CACHE_FALLBACK_KEY: ${CI_DEFAULT_BRANCH}
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .stack/
      - .stack-work/
      - .stack-work.deps/

base:
  stage: base
  image: docker:dind
  rules:
    - changes:
        - Dockerfile.base
  script:
    - image="${CI_REGISTRY}/blaze/blaze/blaze-base:latest"
    - '[ -n "$image" ]'
    - 'docker pull "$image" || echo "Missing from docker registry: $image"'
    - docker build --pull - <Dockerfile.base

push-base:
  stage: push-base
  image: docker:dind
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - Dockerfile.base
  script:
    - image="${CI_REGISTRY}/blaze/blaze/blaze-base:latest"
    - '[ -n "$image" ]'
    - 'docker pull "$image" || echo "Missing from docker registry: $image"'
    - docker build --pull -t "$image" - <Dockerfile.base
    - docker push "$image"

build:
  extends: .haskell-job
  stage: build
  script:
    - stack build --test --no-run-tests

test:
  extends: .haskell-job
  stage: test
  script:
    - stack test

pages:
  extends: .haskell-job
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - when: manual
  script:
    - stack haddock
    - cp -arT "$(stack path --snapshot-doc-root)" public
  allow_failure: true
  artifacts:
    paths:
      - public
